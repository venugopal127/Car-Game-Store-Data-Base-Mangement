
import java.sql.Statement;
import java.sql.Connection;
import javax.swing.table.DefaultTableModel;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author venug
 */
public class Store extends javax.swing.JFrame {

    /**
     * Creates new form Store
     */
    public Store() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Car Name", "Lives", "Speed", "Price"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Fetch");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Items", "Qnty", "weight", "Price"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton3.setText("Buy");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setText("Enter Item ID");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 274, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(334, 334, 334))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3)
                    .addComponent(jLabel1))
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        String url = "jdbc:mysql://localhost:3306/cargame";
        String user = "root";
        String pwd = "Vcestudent_127";
        String query = "SELECT ID,Name,Lives,Speed,Price FROM cars";

        try {
            Connection conn = (Connection) DriverManager.getConnection(url, user, pwd);
            Statement stm = conn.createStatement();
            ResultSet rs = stm.executeQuery(query);

            model.setRowCount(0); // Clear the table before fetching new data

            while (rs.next()) {
                int id = rs.getInt("ID");
                String car = rs.getString("Name");
                int lives = rs.getInt("Lives");
                int speed = rs.getInt("Speed");
                int price = rs.getInt("Price");

                model.addRow(new Object[]{id,car, lives, speed, price});
            }

            rs.close();
            stm.close();
            conn.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "An error occurred while fetching data.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Dashboard dsh = new Dashboard();
        dsh.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
              String carIdText = jTextField1.getText().trim();
        if (carIdText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a Car ID.");
            return;
        }

        int carId;
        try {
            carId = Integer.parseInt(carIdText);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid Car ID.");
            return;
        }
        int userId = session.getUserId();
        String url = "jdbc:mysql://localhost:3306/cargame";
        String user = "root";
        String pwd = "Vcestudent_127";

        try (Connection conn = DriverManager.getConnection(url, user, pwd)) {
            conn.setAutoCommit(false); // Start transaction

            // Fetch car price
            String fetchCarQuery = "SELECT Price FROM cars WHERE ID = ?";
            try (java.sql.PreparedStatement fetchCarStmt = conn.prepareStatement(fetchCarQuery)) {
                fetchCarStmt.setInt(1, carId);
                ResultSet carRs = fetchCarStmt.executeQuery();

                if (!carRs.next()) {
                    JOptionPane.showMessageDialog(this, "Item not found.");
                    conn.rollback();
                    return;
                }

                int carPrice = carRs.getInt("Price");

                // Fetch user balance
                String fetchUserQuery = "SELECT BAL FROM users WHERE ID = ?";
                try (java.sql.PreparedStatement fetchUserStmt = conn.prepareStatement(fetchUserQuery)) {
                    fetchUserStmt.setInt(1, userId);
                    ResultSet userRs = fetchUserStmt.executeQuery();

                    if (!userRs.next()) {
                        JOptionPane.showMessageDialog(this, "User not found.");
                        conn.rollback();
                        return;
                    }

                    int userBalance = userRs.getInt("BAL");

                    if (userBalance < carPrice) {
                        JOptionPane.showMessageDialog(this, "Insufficient balance.");
                        conn.rollback();
                        return;
                    }

                    // Update user balance
                    String updateUserBalanceQuery = "UPDATE users SET BAL = BAL - ? WHERE ID=?";
                    try (java.sql.PreparedStatement updateUserBalanceStmt = conn.prepareStatement(updateUserBalanceQuery)) {
                        updateUserBalanceStmt.setInt(1, carPrice);
                        updateUserBalanceStmt.setInt(2, userId);
                        updateUserBalanceStmt.executeUpdate();
                    }

                    // Insert into ucars
                    String insertUcarsQuery = "INSERT INTO ucars VALUES (?, ?)";
                    try (java.sql.PreparedStatement insertUcarsStmt = conn.prepareStatement(insertUcarsQuery)) {
                        insertUcarsStmt.setInt(1, userId);
                        insertUcarsStmt.setInt(2, carId);
                        
                        insertUcarsStmt.executeUpdate();
                    }

                    // Insert into trans
                    String insertTransQuery = "INSERT INTO trans VALUES (?, ?, ?)";
                    try (java.sql.PreparedStatement insertTransStmt = conn.prepareStatement(insertTransQuery)) {
                        insertTransStmt.setInt(1, userId);
                        insertTransStmt.setInt(2, carId);
                        insertTransStmt.setInt(3, carPrice);
                        insertTransStmt.executeUpdate();
                    }

                    conn.commit(); // Commit transaction

                    JOptionPane.showMessageDialog(this, "purchased successfully.");
                }
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "An error occurred while processing the transaction.");
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Store.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Store.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Store.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Store.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Store.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Store().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
